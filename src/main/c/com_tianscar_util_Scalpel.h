/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_tianscar_util_Scalpel */

#ifndef _Included_com_tianscar_util_Scalpel
#define _Included_com_tianscar_util_Scalpel
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    AllocObject
 * Signature: (Ljava/lang/Class;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_tianscar_util_Scalpel_AllocObject
  (JNIEnv *, jclass, jclass);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    NewObject
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_tianscar_util_Scalpel_NewObject
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetObjectField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_tianscar_util_Scalpel_GetObjectField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetBooleanField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_tianscar_util_Scalpel_GetBooleanField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetByteField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)B
 */
JNIEXPORT jbyte JNICALL Java_com_tianscar_util_Scalpel_GetByteField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetCharField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)C
 */
JNIEXPORT jchar JNICALL Java_com_tianscar_util_Scalpel_GetCharField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetShortField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)S
 */
JNIEXPORT jshort JNICALL Java_com_tianscar_util_Scalpel_GetShortField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetIntField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)I
 */
JNIEXPORT jint JNICALL Java_com_tianscar_util_Scalpel_GetIntField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetLongField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)J
 */
JNIEXPORT jlong JNICALL Java_com_tianscar_util_Scalpel_GetLongField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetFloatField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)F
 */
JNIEXPORT jfloat JNICALL Java_com_tianscar_util_Scalpel_GetFloatField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetDoubleField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;)D
 */
JNIEXPORT jdouble JNICALL Java_com_tianscar_util_Scalpel_GetDoubleField
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetObjectField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetObjectField
  (JNIEnv *, jclass, jobject, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetBooleanField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;Z)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetBooleanField
  (JNIEnv *, jclass, jobject, jobject, jboolean);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetByteField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;B)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetByteField
  (JNIEnv *, jclass, jobject, jobject, jbyte);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetCharField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;C)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetCharField
  (JNIEnv *, jclass, jobject, jobject, jchar);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetShortField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;S)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetShortField
  (JNIEnv *, jclass, jobject, jobject, jshort);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetIntField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;I)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetIntField
  (JNIEnv *, jclass, jobject, jobject, jint);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetLongField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;J)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetLongField
  (JNIEnv *, jclass, jobject, jobject, jlong);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetFloatField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;F)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetFloatField
  (JNIEnv *, jclass, jobject, jobject, jfloat);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetDoubleField
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Field;D)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetDoubleField
  (JNIEnv *, jclass, jobject, jobject, jdouble);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallVoidMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_CallVoidMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallObjectMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_tianscar_util_Scalpel_CallObjectMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallBooleanMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_tianscar_util_Scalpel_CallBooleanMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallByteMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)B
 */
JNIEXPORT jbyte JNICALL Java_com_tianscar_util_Scalpel_CallByteMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallCharMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)C
 */
JNIEXPORT jchar JNICALL Java_com_tianscar_util_Scalpel_CallCharMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallShortMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)S
 */
JNIEXPORT jshort JNICALL Java_com_tianscar_util_Scalpel_CallShortMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallIntMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_com_tianscar_util_Scalpel_CallIntMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallLongMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_tianscar_util_Scalpel_CallLongMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallFloatMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)F
 */
JNIEXPORT jfloat JNICALL Java_com_tianscar_util_Scalpel_CallFloatMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallDoubleMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)D
 */
JNIEXPORT jdouble JNICALL Java_com_tianscar_util_Scalpel_CallDoubleMethod
  (JNIEnv *, jclass, jobject, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualVoidMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualVoidMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualObjectMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualObjectMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualBooleanMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualBooleanMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualByteMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)B
 */
JNIEXPORT jbyte JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualByteMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualCharMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)C
 */
JNIEXPORT jchar JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualCharMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualShortMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)S
 */
JNIEXPORT jshort JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualShortMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualIntMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualIntMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualLongMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualLongMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualFloatMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)F
 */
JNIEXPORT jfloat JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualFloatMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallNonvirtualDoubleMethod
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)D
 */
JNIEXPORT jdouble JNICALL Java_com_tianscar_util_Scalpel_CallNonvirtualDoubleMethod
  (JNIEnv *, jclass, jobject, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticObjectField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_tianscar_util_Scalpel_GetStaticObjectField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticBooleanField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_tianscar_util_Scalpel_GetStaticBooleanField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticByteField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)B
 */
JNIEXPORT jbyte JNICALL Java_com_tianscar_util_Scalpel_GetStaticByteField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticCharField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)C
 */
JNIEXPORT jchar JNICALL Java_com_tianscar_util_Scalpel_GetStaticCharField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticShortField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)S
 */
JNIEXPORT jshort JNICALL Java_com_tianscar_util_Scalpel_GetStaticShortField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticIntField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)I
 */
JNIEXPORT jint JNICALL Java_com_tianscar_util_Scalpel_GetStaticIntField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticLongField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)J
 */
JNIEXPORT jlong JNICALL Java_com_tianscar_util_Scalpel_GetStaticLongField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticFloatField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)F
 */
JNIEXPORT jfloat JNICALL Java_com_tianscar_util_Scalpel_GetStaticFloatField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    GetStaticDoubleField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;)D
 */
JNIEXPORT jdouble JNICALL Java_com_tianscar_util_Scalpel_GetStaticDoubleField
  (JNIEnv *, jclass, jclass, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticObjectField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticObjectField
  (JNIEnv *, jclass, jclass, jobject, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticBooleanField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;Z)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticBooleanField
  (JNIEnv *, jclass, jclass, jobject, jboolean);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticByteField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;B)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticByteField
  (JNIEnv *, jclass, jclass, jobject, jbyte);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticCharField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;C)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticCharField
  (JNIEnv *, jclass, jclass, jobject, jchar);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticShortField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;S)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticShortField
  (JNIEnv *, jclass, jclass, jobject, jshort);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticIntField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;I)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticIntField
  (JNIEnv *, jclass, jclass, jobject, jint);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticLongField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;J)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticLongField
  (JNIEnv *, jclass, jclass, jobject, jlong);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticFloatField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;F)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticFloatField
  (JNIEnv *, jclass, jclass, jobject, jfloat);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    SetStaticDoubleField
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Field;D)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_SetStaticDoubleField
  (JNIEnv *, jclass, jclass, jobject, jdouble);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticVoidMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_tianscar_util_Scalpel_CallStaticVoidMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticObjectMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_tianscar_util_Scalpel_CallStaticObjectMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticBooleanMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_tianscar_util_Scalpel_CallStaticBooleanMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticByteMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)B
 */
JNIEXPORT jbyte JNICALL Java_com_tianscar_util_Scalpel_CallStaticByteMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticCharMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)C
 */
JNIEXPORT jchar JNICALL Java_com_tianscar_util_Scalpel_CallStaticCharMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticShortMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)S
 */
JNIEXPORT jshort JNICALL Java_com_tianscar_util_Scalpel_CallStaticShortMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticIntMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_com_tianscar_util_Scalpel_CallStaticIntMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticLongMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_com_tianscar_util_Scalpel_CallStaticLongMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticFloatMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)F
 */
JNIEXPORT jfloat JNICALL Java_com_tianscar_util_Scalpel_CallStaticFloatMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    CallStaticDoubleMethod
 * Signature: (Ljava/lang/Class;Ljava/lang/reflect/Method;[Ljava/lang/Object;)D
 */
JNIEXPORT jdouble JNICALL Java_com_tianscar_util_Scalpel_CallStaticDoubleMethod
  (JNIEnv *, jclass, jclass, jobject, jobjectArray);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    JVM_DefineClass
 * Signature: (Ljava/lang/String;Ljava/lang/ClassLoader;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_com_tianscar_util_Scalpel_JVM_1DefineClass__Ljava_lang_String_2Ljava_lang_ClassLoader_2_3BIILjava_security_ProtectionDomain_2
  (JNIEnv *, jclass, jstring, jobject, jbyteArray, jint, jint, jobject);

/*
 * Class:     com_tianscar_util_Scalpel
 * Method:    JVM_DefineClass
 * Signature: (Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/nio/ByteBuffer;ILjava/security/ProtectionDomain;)Ljava/lang/Class;
 */
JNIEXPORT jclass JNICALL Java_com_tianscar_util_Scalpel_JVM_1DefineClass__Ljava_lang_String_2Ljava_lang_ClassLoader_2Ljava_nio_ByteBuffer_2ILjava_security_ProtectionDomain_2
  (JNIEnv *, jclass, jstring, jobject, jobject, jint, jobject);

#ifdef __cplusplus
}
#endif
#endif
